{"version":3,"sources":["logo.svg","Player.js","Search.js","SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","item","backgroundStyles","backgroundImage","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","src","alt","name","artists","is_playing","style","Search","state","search","filters","track","artist","playlist","onSubmit","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","type","onChange","Component","SearchResults","albums","tracks","playlists","console","log","trackList","map","onClick","a","play","uri","scopes","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","App","token","searchResults","getCurrentlyPlaying","tick","disconnectSpotify","onSearch","onError","renderSearch","playSong","_token","access_token","spotify_token","localStorage","getItem","setItem","spotify","axios","create","baseURL","headers","Authorization","interval","setInterval","clearInterval","err","response","status","get","res","no_data","data","params","q","removeItem","reload","song","put","uris","items","logo","href","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ef2b2c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./Player.css\";\r\n\r\nconst Player = props => {\r\n    if (!props.item) {\r\n        return null;\r\n    }\r\n\r\n    const backgroundStyles = {\r\n        backgroundImage: `url(${props.item.album.images[0].url})`,\r\n    };\r\n\r\n    const progressBarStyles = {\r\n        width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"main-wrapper\">\r\n                <div className=\"now-playing__img\">\r\n                    <img src={props.item.album.images[0].url} alt=\"Album Artwork\" />\r\n                </div>\r\n                <div className=\"now-playing__side\">\r\n                    <div className=\"now-playing__name\">{props.item.name}</div>\r\n                    <div className=\"now-playing__artist\">\r\n                        {props.item.artists[0].name}\r\n                    </div>\r\n                    <div className=\"now-playing__status\">\r\n                        {props.is_playing ? \"Playing\" : \"Paused\"}\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress__bar\" style={progressBarStyles} />{\" \"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"background\" style={backgroundStyles} />{\" \"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react';\r\nimport \"./Search.css\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            filters: {\r\n                track: true,\r\n                artist: true,\r\n                album: true,\r\n                playlist: true\r\n            },\r\n            onSubmit: props.onSubmit\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ search: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.state.onSubmit(this.state.search);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"search\" onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <input className=\"input__search\" type=\"search\" value={this.state.search} onChange={this.handleChange} />\r\n                    <input className=\"btn__search\" type=\"submit\" value=\"Search\" />\r\n                </div>\r\n                <label><input className=\"filter\" type=\"checkbox\" value={this.state.filters.track} />Track</label>\r\n                <label><input className=\"filter\" type=\"checkbox\" value={this.state.filters.artist} />Artist</label>\r\n                <label><input className=\"filter\" type=\"checkbox\" value={this.state.filters.album} />Album</label>\r\n                <label><input className=\"filter\" type=\"checkbox\" value={this.state.filters.playlist} />Playlist</label>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport \"./SearchResults.css\"\r\n\r\nclass SearchResults extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            artists: [],\r\n            albums: [],\r\n            tracks: [],\r\n            playlists: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.tracks);\r\n        if (!this.props.tracks) {\r\n            return null;\r\n        }\r\n\r\n        const trackList = this.props.tracks.map(track => {\r\n            return <li className=\"search-result\" key={track.uri} onClick={async () => await this.props.play(track.uri)}>\r\n                <img src={track.album.images[2].url} alt=\"album art\" />\r\n                <span className=\"track__name\">{track.name}</span>\r\n                <span className=\"track__artist\">{track.artists[0].name}</span>\r\n                <span className=\"track__album\">{track.album.name}</span>\r\n            </li>;\r\n        });\r\n        return (\r\n            <ul className=\"tracks\">{trackList}</ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport Player from \"./Player\";\nimport Search from \"./Search\";\nimport SearchResults from \"./SearchResults\";\nimport './App.css';\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nconst clientId = \"5fc72c06cd0d48cdab58b0364d6a7a8d\";\nconst redirectUri = \"https://peterfaria.me/all-the-playlists/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-modify-playback-state\"\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce((initial, item) => {\n    if (item) {\n      const parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      searchResults: {}\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n    this.disconnectSpotify = this.disconnectSpotify.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onError = this.onError.bind(this);\n    this.renderSearch = this.renderSearch.bind(this);\n    this.playSong = this.playSong.bind(this);\n  }\n\n  async componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    let spotify_token = window.localStorage.getItem('spotify_token')\n    if (!_token && !spotify_token) {\n      return;\n    }\n\n    var token;\n    if (_token) {\n      token = _token;\n      window.localStorage.setItem('spotify_token', _token);\n    } else if (spotify_token) {\n      token = spotify_token;\n    }\n\n    this.setState({\n      token: token\n    });\n\n    this.spotify = axios.create({\n      baseURL: 'https://api.spotify.com/v1',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    await this.getCurrentlyPlaying(token);\n\n    // set interval for polling every 5 seconds\n    this.interval = setInterval(() => this.tick(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if (this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n  onError(err) {\n    if (err.response && err.response.status === 401) {\n      this.disconnectSpotify();\n    } else {\n      console.log(err);\n    }\n  }\n\n  async getCurrentlyPlaying() {\n    try {\n      const res = await this.spotify.get('/me/player');\n      if (!res) {\n        this.setState({\n          no_data: true,\n        });\n        return;\n      }\n\n      const data = res.data;\n      this.setState({\n        item: data.item,\n        is_playing: data.is_playing,\n        progress_ms: data.progress_ms,\n        no_data: false\n      });\n\n    } catch (err) {\n      this.onError(err);\n    }\n  }\n\n  async onSearch(search) {\n    try {\n      const res = await this.spotify.get('/search', {\n        params: {\n          q: search,\n          type: 'album,artist,playlist,track'\n        }\n      });\n\n      if (!res) {\n        this.setState({\n          searchResults: null\n        });\n      }\n\n      this.setState({\n        searchResults: res.data\n      });\n    } catch (err) {\n      this.onError(err);\n    }\n  }\n\n  disconnectSpotify() {\n    window.localStorage.removeItem('spotify_token');\n    window.location.reload(true);\n  }\n\n  async playSong(song) {\n    try {\n      await this.spotify.put(\"/me/player/play\", {\n        uris: [song],\n      });\n    } catch (err) {\n      this.onError(err);\n    }\n  }\n\n  renderSearch() {\n    console.log(this.state.searchResults);\n    return this.state.searchResults && this.state.searchResults.tracks && this.state.searchResults.tracks.items\n      ? (<SearchResults\n        tracks={this.state.searchResults.tracks.items}\n        play={this.playSong}\n      />)\n      : null;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n            >\n              Login to spotify\n            </a>\n          )}\n          {this.state.token && !this.state.no_data && (\n            <div>\n              <Search onSubmit={this.onSearch} />\n              {this.renderSearch()}\n              <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              />\n              <button\n                className=\"btn btn--loginApp-link\"\n                onClick={this.disconnectSpotify}\n              >\n                Disconnect from Spotify\n              </button>\n            </div>\n          )}\n          {this.state.no_data && (\n            <p>\n              You need to be playing a song on Soptify for something to appear here.\n            </p>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}